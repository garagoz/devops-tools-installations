pipeline {
    agent any
    
    tools {
        maven "maven3"
        jdk "jdk17"
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }


    stages {
        stage('Git Checkout') {
            steps {
                git 'https://github.com/jaiswaladi246/secretsanta-generator.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn clean compile -DskipTests=true'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Sonar Analysis') {
            steps {
                script {
                    withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=santa \
                   -Dsonar.projectName=santa \
                   -Dsonar.java.binaries=. '''
                 }
                }
            }
        }
        
        stage('OWASP Check') {
            steps {
                dependencyCheck additionalArguments: '--scan .', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
        stage('Build Application') {
            steps {
                sh 'mvn clean package -DskipTests=true'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                    sh 'docker build -t santa:latest .'
                  }
                }
            }
        }
        
        stage('Tag & Push Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                    sh 'docker tag santa:latest atorayew/santa:latest'
                    sh 'docker push atorayew/santa:latest'
                  }
                }
            }
        }
        
        stage('Deploy Application') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                    sh 'docker run -d -p 8081:8080 atorayew/santa:latest'
                  }
                }
            }
        }
    }
}